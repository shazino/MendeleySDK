//
// MDLUser.h
//
// Copyright (c) 2012-2013 shazino (shazino SAS), http://www.shazino.com/
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#import <Foundation/Foundation.h>

@class MDLCategory;

/**
 `MDLUser` represents a user, as described by Mendeley.
 */

@interface MDLUser : NSObject

/**
 The user name.
 */
@property (copy, nonatomic) NSString *name;

/**
 The user academic status.
 */
@property (copy, nonatomic) NSString *academicStatus;

/**
 The user academic status identifier.
 */
@property (copy, nonatomic) NSString *academicStatusIdentifier;

/**
 The user bio.
 */
@property (copy, nonatomic) NSString *bio;

/**
 The user category.
 */
@property (strong, nonatomic) MDLCategory *category;

/**
 The user location.
 */
@property (copy, nonatomic) NSString *location;

/**
 The user pohoto URL.
 */
@property (strong, nonatomic) NSURL *photoURL;

/**
 The user identifier, as generated by Mendeley.
 */
@property (copy, nonatomic) NSString *identifier;

/**
 The user research interests.
 */
@property (copy, nonatomic) NSString *researchInterests;

/**
 The user Mendeley URL.
 */
@property (strong, nonatomic) NSURL *mendeleyURL;

/**
 The user contact address
 */
@property (copy, nonatomic) NSString *contactAddress;

/**
 The user contact email
 */
@property (copy, nonatomic) NSString *contactEmail;

/**
 The user contact fax
 */
@property (copy, nonatomic) NSString *contactFax;

/**
 The user contact mobile
 */
@property (copy, nonatomic) NSString *contactMobile;

/**
 The user contact phone
 */
@property (copy, nonatomic) NSString *contactPhone;

/**
 The user contact webpage
 */
@property (copy, nonatomic) NSString *contactWebpage;

/**
 The user contact ZIP code
 */
@property (copy, nonatomic) NSString *contactZIPCode;

/**
 Creates a `MDLUser` and initializes its identifier and name properties.
 
 @param identifier The identifier of the user.
 @param name The name of the user.
 
 @return  The newly-initialized user.
 */
+ (MDLUser *)userWithIdentifier:(NSString *)identifier name:(NSString *)name;

/**
 Sends a profile information API request using the shared client and fetches the response as a `MDLUser`.
 
 @param success A block object to be executed when the request operation finishes successfully. 
  This block has no return value and takes one argument: a `MDLUser` object.
 @param failure A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. 
  This block has no return value and takes one argument: the `NSError` object describing the network or parsing error that occurred.
 
 @see [API documentation: Profile Information](http://apidocs.mendeley.com/home/user-specific-methods/profile-information)
 */
+ (void)fetchMyUserProfileSuccess:(void (^)(MDLUser *))success
                          failure:(void (^)(NSError *))failure;

/**
 Sends a contacts API request using the shared client and fetches the response as an array of `MDLUser`.
 
 @param success A block object to be executed when the request operation finishes successfully. 
  This block has no return value and takes one argument: an array of `MDLUser` objects.
 @param failure A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data.
  This block has no return value and takes one argument: the `NSError` object describing the network or parsing error that occurred.
 
 @see [API documentation: User Profile Contacts](http://apidocs.mendeley.com/home/user-specific-methods/user-profile-contacts)
 */
+ (void)fetchContactsSuccess:(void (^)(NSArray *))success
                     failure:(void (^)(NSError *))failure;

/**
 Sends a profile information API request using the shared client and fetches the response as a `MDLUser`.
 
 @param success A block object to be executed when the request operation finishes successfully.
  This block has no return value and takes one argument: a `MDLUser` object.
 @param failure A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. 
  This block has no return value and takes one argument: the `NSError` object describing the network or parsing error that occurred.
 
 @see [API documentation: Profile Information](http://apidocs.mendeley.com/home/user-specific-methods/profile-information)
 */
- (void)fetchProfileSuccess:(void (^)(MDLUser *))success
                    failure:(void (^)(NSError *))failure;

/**
 Sends an add contact API request using the shared client.
 
 @param success A block object to be executed when the request operation finishes successfully. 
  This block has no return value and takes no argument.
 @param failure A block object to be executed when the request operation finishes unsuccessfully, or that finishes successfully, but encountered an error while parsing the resonse data. 
  This block has no return value and takes one argument: the `NSError` object describing the network or parsing error that occurred.
 
 @see [API documentation: User Profile Add Contact](http://apidocs.mendeley.com/home/user-specific-methods/user-profile-add-contact)
 */
- (void)sendContactRequestSuccess:(void (^)())success
                          failure:(void (^)(NSError *))failure;

@end
